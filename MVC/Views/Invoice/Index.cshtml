@model DFPay.Application.ViewModels.InvoiceListViewModel;
@using DFPay.Application.ViewModels;

@{
    ViewData["Title"] = Localizer["Invoice"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">@ViewData["Title"]</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">@Localizer["Home"]</a></li>
                    <li class="breadcrumb-item active">@ViewData["Title"]</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">
        <!-- Main content -->
        <section class="content">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <div class="float-right">
                                <a asp-action="Create" asp-controller="Invoice" class="btn btn-primary" id="CreateInvoice"><i class="fas fa-plus"></i> <span class="d-none d-sm-inline">@Localizer["Add New"]</span></a>
                            </div>
                            <div class="form-inline">
                                <div class="btn-toolbar">
                                    <button id="reportrange" class="form-control mr-1">
                                        <i class="fa fa-calendar-alt d-none d-sm-inline"></i>&nbsp;
                                        <span></span> <i class="fa fa-caret-down"></i>
                                    </button>
                                    <select asp-for="StatusList" asp-items="Html.GetEnumSelectList<InvoiceStatus>()" class="form-control">
                                        <option value="">@Localizer["All Status"]</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table id="datatable" class="table table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>@Localizer["Invoice No"]</th>
                                            <th>@Localizer["Name"]</th>
                                            <th>@Localizer["Email"]</th>
                                            @*<th>@Localizer["Description"]</th>*@
                                            <th>@Localizer["Amount"]</th>
                                            <th style="white-space: nowrap">@Localizer["Invoice Date"]</th>
                                            <th>@Localizer["Action"]</th>
                                        </tr>
                                    </thead>
                                    <tfoot>
                                        <tr>
                                            <th>@Localizer["Invoice No"]</th>
                                            <th>@Localizer["Name"]</th>
                                            <th>@Localizer["Email"]</th>
                                            @*<th>@Localizer["Description"]</th>*@
                                            <th>@Localizer["Amount"]</th>
                                            <th>@Localizer["Invoice Date"]</th>
                                            <th>@Localizer["Action"]</th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

<script type="text/javascript">
    var oTable = null;
    var minDateFilter = "";
    var maxDateFilter = "";
    var dtlang = '';
    var cultureInfo = '';
    isCreateInvoiceAuthorized > 0 ? $("#CreateInvoice").show() : $("#CreateInvoice").hide();

    $(document).ready(function () {
        cultureInfo = '@System.Globalization.CultureInfo.CurrentCulture.Name';
        if (cultureInfo == 'zh-CN') {
            dtlang = ChineseJson;
        } else if (cultureInfo == 'en-US') {
            dtlang = EnglishJson;
        }

        var start = '@ViewBag.startDate' == '' ? moment().subtract(29, 'days') : moment('@ViewBag.startDate', 'MM-DD-YYYY');
        var end = '@ViewBag.endDate' == '' ? moment() : moment('@ViewBag.endDate', 'MM-DD-YYYY');
        var unread = '@ViewBag.unread' == '' ? null : '@ViewBag.unread';

        function selectDate(start, end) {
            $('#reportrange span').html(start.format('D MMM YYYY') + ' - ' + end.format('D MMM YYYY'));
            minDateFilter = start.format('D MMM YYYY');
            maxDateFilter = end.format('D MMM YYYY');
        }

        if ('@ViewBag.status'!='') {
            $('#StatusList option[value="@ViewBag.status"]').prop('selected', true);
        }

        $('#reportrange').on('apply.daterangepicker', function (ev, picker) {
            unread = null;
            oTable.ajax.reload();
        });

        $('#reportrange').daterangepicker({
            startDate: start,
            endDate: end,
            ranges: {
                '@Localizer["All Time"]': [moment('1970-01-01'), moment()],
                '@Localizer["Today"]': [moment(), moment()],
                '@Localizer["Yesterday"]': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                '@Localizer["Last 7 Days"]': [moment().subtract(6, 'days'), moment()],
                '@Localizer["Last 30 Days"]': [moment().subtract(29, 'days'), moment()],
                '@Localizer["This Month"]': [moment().startOf('month'), moment().endOf('month')],
                '@Localizer["Last Month"]': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            },
            locale: {
                applyLabel: '@Localizer["Apply"]',
                cancelLabel: '@Localizer["Cancel"]',
                customRangeLabel: '@Localizer["Custom Range"]',
                monthNames: ['@Localizer["January"]', '@Localizer["February"]', '@Localizer["March"]', '@Localizer["April"]', '@Localizer["May"]', '@Localizer["June"]', '@Localizer["July"]', '@Localizer["August"]', '@Localizer["September"]', '@Localizer["October"]', '@Localizer["November"]', '@Localizer["December"]']
            }
        }, selectDate);

        selectDate(start, end);

        $("#StatusList").change(function () {
            unread = null;
            oTable.ajax.reload();
        });

        var form = $('#__AjaxAntiForgeryForm');
        var token = $('input[name="__RequestVerificationToken"]', form).val();

        oTable = $("#datatable").DataTable(
            {
                dom: "<'row'<'col-sm-1'f><'col-sm-2 offset-sm-9 text-right'l>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                "responsive": true,
                "autoWidth": false,
                "language": dtlang,
                "ajax": {
                    "type": "POST",
                    "url": "/Invoice/GetInvoice",
                    "data": function (data) {
                        data.__RequestVerificationToken = token;
                        data.status = $("#StatusList").val();
                        data.startDate = minDateFilter;
                        data.endDate = maxDateFilter;
                        data.unread = unread;
                        return data = data;
                    }
                },
                "columns": [
                    {
                        "data": "invoiceNo",
                        render: function (data, type, full, meta) {
                            var html = '';
                            if (full.status == 1) {
                                html = '<br/><span class="badge badge-warning text-white">' + '@Localizer["Pending"]' + '</span>';
                            } else if (full.status == 2) {
                                html = '<br/><span class="badge badge-success">' + '@Localizer["Success"]' + '</span>';
                            } else if (full.status == 3) {
                                html = '<br/><span class="badge badge-secondary">' + '@Localizer["Expired"]' + '</span>';
                            } else {
                                html = '<br/><span class="badge badge-danger">' + '@Localizer["Deleted"]' + '</span>';
                            }
                            return data + html;
                        }
                    },
                    {
                        "data": "clientName"
                    },
                    {
                        "data": "clientEmail"
                    },
                    //{
                    //    "data": "invoiceItems",
                    //    render: function (data) {
                    //        var html = '';
                    //        if (data.length > 0) {
                    //            for (var i = 0; i < data.length; i++) {
                    //                html = html + data[i].description + '<br>';
                    //            }
                    //        }
                    //        return html;
                    //    }
                    //},
                    {
                        "data": "amount",
                        render: $.fn.dataTable.render.number(',', '.', 2, '$')
                    },
                    {
                        "data": "invoiceDate",
                        render: function (data, type, full, row) { return moment(data).format("DD MMM YYYY"); }
                    },
                    {
                        sortable: false,
                        "data": "status",
                        render: function (data, type, full, row) {
                            if (true) {
                                var html = '<div class="btn-group btn-group-sm">';
                                if (isViewDetailInvoiceAuthorized > 0) {
                                    html += '<a href="/Invoice/View?id=' + full.id + '" class="btn btn-primary" title="View"><i class="fas fa-eye"></i> ' + '@Localizer["View"]' + '</a>';
                                }
                                if (isResendInvoiceAuthorized > 0 && data == @((int)InvoiceStatus.Expired)) {
                                    html += '<a href="#" onclick=Resend("/Invoice/Resend?id='+ full.id +'") class="btn btn-warning text-white" title="Resend"><i class="fas fa-envelope"></i> ' + '@Localizer["Resend"]' + '</a>';

                                }
                                if (isDeleteInvoiceAuthorized > 0 && data != @((int)InvoiceStatus.Deleted)) {
                                    html += '<a href="#" onclick=Delete("/Invoice/Delete?id=' + full.id + '") class="btn btn-danger" title="Delete"><i class="fas fa-trash"></i> ' + '@Localizer["Delete"]' + '</a>';
                                }
                                return html +="</div>";
                            } else {
                                return '';
                            }
                        }
                    }
                ],
                "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                    if (aData.unread == "1") {
                        $('td', nRow).css('font-weight', '550');
                    }
                }
            });
    });

    function Resend(url) {
        Swal.fire({
            title: '@Localizer["Are you sure?"]',
            text: '@Localizer["Once resend, the previous email payment link will be invalid"]',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '@Localizer["OK"]',
            cancelButtonText: '@Localizer["Cancel"]'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: "POST",
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            oTable.ajax.reload();
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                });
            }
        })
    }

    function Delete(url) {
        Swal.fire({
            title: '@Localizer["Are you sure?"]',
            text: '@Localizer["Once deleted, you will not be able to recover"]',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '@Localizer["OK"]',
            cancelButtonText: '@Localizer["Cancel"]'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: "DELETE",
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            oTable.ajax.reload();
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                });
            }
        })
    }

</script>